export interface Employee {
  id: string;
  nome: string;
  cognome: string;
  email: string;
  posizione: string;
  dipartimento: string;
  dataAssunzione: string;
  telefono?: string;
  isActive: boolean;
  // New fields for Auto-Scheduling Intelligence
  performanceScore?: number; // 1-10 scale
  lastPerformanceReview?: string;
  contractExpiryDate?: string;
  riskLevel?: 'low' | 'medium' | 'high';
  preferredCallFrequency?: 'weekly' | 'biweekly' | 'monthly' | 'quarterly';
  lastCallRating?: number;
  averageCallRating?: number;
  totalCalls?: number;
}

export interface Call {
  id: string;
  employeeId: string;
  dataSchedulata: string;
  dataCompletata?: string;
  durata?: number;
  note?: string;
  rating?: number;
  status: 'scheduled' | 'completed' | 'cancelled' | 'suspended' | 'rescheduled';
  nextCallDate?: string;
  googleCalendarEventId?: string;
  lastSyncedAt?: string;
  modifications?: CallModification[];
  rescheduledCount?: number;
}

export interface User {
  id: string;
  email: string;
  nome: string;
  cognome: string;
  ruolo: string;
}

export interface CompanyApiEmployee {
  employeeId: string;
  firstName: string;
  lastName: string;
  email: string;
  position: string;
  department: string;
  hireDate: string;
  phone?: string;
  status: 'active' | 'inactive';
}

export interface CallFormData {
  dataSchedulata: string;
  note?: string;
  nextCallDate?: string;
}

export interface CallCompletionData {
  dataCompletata: string;
  durata: number;
  note: string;
  rating: number;
  nextCallDate?: string;
}

export interface CallModification {
  id: string;
  timestamp: string;
  action: 'created' | 'rescheduled' | 'suspended' | 'resumed' | 'completed' | 'cancelled' | 'deleted';
  previousData?: Partial<Call>;
  newData?: Partial<Call>;
  reason?: string;
  userId?: string;
}

// Auto-Scheduling Intelligence Types
export interface SchedulingSuggestion {
  id: string;
  employeeId: string;
  suggestedDate: string;
  priority: 'urgent' | 'high' | 'medium' | 'low';
  confidence: number; // 0-1 scale
  reasoning: string[];
  triggers: SchedulingTrigger[];
  autoGenerated: boolean;
  createdAt: string;
  status: 'pending' | 'accepted' | 'dismissed' | 'scheduled';
}

export interface SchedulingTrigger {
  type: 'performance_decline' | 'contract_expiry' | 'overdue_review' | 'low_rating' | 'company_event' | 'custom';
  description: string;
  severity: 'low' | 'medium' | 'high';
  daysUntilAction?: number;
}

export interface CompanyEvent {
  id: string;
  title: string;
  date: string;
  type: 'review_cycle' | 'budget_planning' | 'restructuring' | 'training' | 'other';
  impactsEmployees: boolean;
  affectedDepartments?: string[];
  affectedEmployees?: string[];
  description?: string;
}

export interface SchedulingRule {
  id: string;
  name: string;
  description: string;
  condition: SchedulingCondition;
  action: SchedulingAction;
  priority: number;
  isActive: boolean;
  createdAt: string;
}

export interface SchedulingCondition {
  type: 'performance_score' | 'days_since_last_call' | 'contract_days_remaining' | 'rating_below' | 'company_event';
  operator: 'less_than' | 'greater_than' | 'equals' | 'between' | 'in_next_days';
  value: number | string | [number, number];
}

export interface SchedulingAction {
  type: 'suggest_call' | 'send_notification' | 'escalate' | 'auto_schedule';
  priority: 'urgent' | 'high' | 'medium' | 'low';
  message?: string;
  scheduleDaysFromNow?: number;
}

// Smart Notifications Types
export interface SmartNotification {
  id: string;
  type: 'call_reminder' | 'overdue_call' | 'performance_alert' | 'contract_expiry' | 'suggestion_available';
  priority: 'urgent' | 'high' | 'medium' | 'low';
  title: string;
  message: string;
  contextData: Record<string, any>;
  targetUserId?: string;
  relatedEmployeeId?: string;
  relatedCallId?: string;
  channels: NotificationChannel[];
  scheduledAt?: string;
  sentAt?: string;
  status: 'pending' | 'sent' | 'failed' | 'cancelled';
  autoGenerated: boolean;
  createdAt: string;
}

export interface NotificationChannel {
  type: 'in_app' | 'email' | 'sms' | 'push';
  enabled: boolean;
  config?: Record<string, any>;
}